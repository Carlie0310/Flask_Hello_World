# .github/workflows/atelier3.yml
name: ATELIER 3 – Serveur Flask (via __init__.py) + ngrok

# Ce workflow ne se déclenchera QUE manuellement (workflow_dispatch)
# pour éviter de lancer CICD.yml à la place.
on:
  workflow_dispatch:

jobs:
  deploy-flask-via-ngrok:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout : récupérer tout le contenu du dépôt
      - name: Checkout du dépôt
        uses: actions/checkout@v3

      # 2. Build de l’image Docker à partir du Dockerfile à la racine
      - name: Build de l’image Docker
        run: |
          docker build -t flask-hello-world .

      # 3. Lancer le conteneur Flask en détaché, exposant le port 5000
      - name: Lancer le conteneur Flask
        run: |
          docker run -d --name flask_container -p 5000:5000 flask-hello-world

      # 4. Installer ngrok (Linux 64 bits)
      - name: Installer ngrok
        run: |
          wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
          unzip ngrok-stable-linux-amd64.zip
          chmod +x ./ngrok

      # 5. (Optionnel) Authentifier ngrok si vous avez un token dans 
      #    les Secrets GitHub (NGROK_AUTH_TOKEN). Décommentez si nécessaire.
      # - name: Auth ngrok
      #   run: |
      #     ./ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      # 6. Démarrer ngrok pour exposer le port 5000 et capturer l’URL publique
      - name: Démarrer ngrok et récupérer l’URL
        id: start_ngrok
        run: |
          # Lancer ngrok en arrière-plan et diriger la sortie vers ngrok.log
          nohup ./ngrok http 5000 --log=stdout > ngrok.log 2>&1 &
          # Laisser ngrok démarrer (2–3 secondes, 5 est plus sûr)
          sleep 5
          # Extraire la première URL publique du type https://xxxx.ngrok.io
          NGROK_URL=$(grep -oE "https://[0-9a-z]+\\.ngrok\\.io" ngrok.log | head -n1)
          echo "URL_NGROK=$NGROK_URL" >> $GITHUB_OUTPUT

      # 7. Afficher dans les logs l’URL ngrok pour y accéder pendant 120 s
      - name: Afficher l’URL ngrok
        run: |
          echo "Votre serveur Flask est exposé temporairement à : ${{ steps.start_ngrok.outputs.URL_NGROK }}"

      # 8. Laisser le tunnel actif pendant 120 secondes, puis terminer
      - name: Garder le tunnel actif (120 s)
        run: |
          echo "Tunnel actif pendant 120 secondes…"
          sleep 120
          echo "Fin du tunnel. Le job va se terminer."
